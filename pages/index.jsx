import Head from 'next/head'
import {Inter} from '@next/font/google'
import styles from '../styles/Home.module.css'

import {useEffect, useState} from 'react'
import Link from 'next/link'
import Card from '@mui/material/Card';
import CardActions from '@mui/material/CardActions';
import CardContent from '@mui/material/CardContent';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import {Grid} from '@mui/material'

const inter = Inter({ subsets: ['latin'] })

export async function getStaticProps(context) {
    return {
        props: {
            API_URL: process.env.API_HOST ? process.env.API_HOST : '/api/'
        }
    }
}

export default function Home({API_URL}) {
    const [data, setData] = useState(null)
    const [relationships, setRelationships] = useState([])
    const [isLoading, setLoading] = useState(false)

    function deleteItem(item) {
        // /api/persons/:id DELETE
        fetch(API_URL + `persons/${item.id}`, {
            method: 'DELETE',
        })
            .then((res) => res.json())
            .then((deletedData) => {
        console.log(deletedData)
        //delete in the local state
        setData(data.filter((person) => person.id !== item.id))
      })
  }
  useEffect(() => {
    setLoading(true)
      fetch(API_URL + `persons`)
      .then((res) => res.json())
      .then((data) => {
          console.log(data)
          setData(data.data)
          setLoading(false)
      })
      fetch(API_URL + `relationships`)
          .then((res) => res.json())
          .then((data) => {
              console.log(data)
              setRelationships(data.relationships)
          });
  }, [API_URL])


    if (isLoading) return <p>Loading...</p>
    if (!data) return <p>No profile data</p>

    function exportAs(type) {
        //open new window
        window.open(API_URL + `export/${type}`, '_blank')
    }

    //CRUD
    return (
        //Create Button
        <div className={styles.container}>
            <Head>
                <title>Todo App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>


            </Head>

      <main className={styles.main}>

        <div className={styles.title}>
            <h1 className={styles.title}>
                Todo App
            </h1>
            <div className={styles.navbar}>
                <Link href="/details" passHref>
                    <Button variant="contained">Create</Button>
                </Link>
                <Button onClick={() => exportAs("json")} variant="contained">Export as JSON</Button>
                <Button onClick={() => exportAs("csv")} variant="contained">Export as CSV</Button>
                <Button onClick={() => exportAs("csv-matrix")} variant="contained">Export as CSV Matrix</Button>
            </div>

        </div>

        <Grid container spacing={2}>
          {
            data.map((item, index) => {
              return (
                <Card sx={{ minWidth: 275 }} key={index}>
                  <CardContent>
                    <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
                      {item.name}
                    </Typography>
                    <Typography variant="h5" component="div">
                      {index}
                    </Typography>
                    <Typography sx={{ mb: 1.5 }} color="text.secondary">
                      adjective
                    </Typography>

                  </CardContent>
                  <CardActions>
                    <Link
                      href={{
                        pathname: '/details',
                        query: {
                          node_id: item.node_id,
                        } // the data
                      }}
                      passHref
                    >
                      <Button size="small">Edit</Button>
                    </Link>

                    <Button size="small" onClick={() => deleteItem(item)}>Delete</Button>

                  </CardActions>
                </Card>
              )
            })
          }
        </Grid>
      </main>
    </div>

  )
}
