import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import Box from '@mui/material/Box';
import Card from '@mui/material/Card';
import CardActions from '@mui/material/CardActions';
import CardContent from '@mui/material/CardContent';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import { Grid } from '@mui/material'

const inter = Inter({ subsets: ['latin'] })


export default function Home() {
  const [data, setData] = useState(null)
  const [relationships, setRelationships] = useState([])
  const [isLoading, setLoading] = useState(false)
  function deleteItem(item){
    // /api/persons/:id DELETE
    fetch(`/api/persons/${item.id}`, {
      method: 'DELETE',
    })
      .then((res) => res.json())
      .then((deletedData) => {
        console.log(deletedData)
        //delete in the local state
        setData(data.filter((person) => person.id !== item.id))
      })
  }
  useEffect(() => {
    setLoading(true)
    fetch(`/api/persons`)
      .then((res) => res.json())
      .then((data) => {
        console.log(data)
        setData(data.persons)
        setLoading(false)
      })
    fetch(`/api/relationships`)
      .then((res) => res.json())
      .then((data) => {
        console.log(data)
        setRelationships(data.relationships)
      });
  }, [])


  if (isLoading) return <p>Loading...</p>
  if (!data) return <p>No profile data</p>

  //CRUD
  return (
    //Create Button
    <div className={styles.container}>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <div className={styles.title}>
          <h1 className={styles.title}>
            Todo App
          </h1>
          <div className={styles.navbar}>
            <Link href="/details" passHref>
              <Button variant="contained">
                Create</Button>
            </Link>
          </div>

        </div>

        <Grid container spacing={2}>
          {
            data.map((item, index) => {
              return (
                <Card sx={{ minWidth: 275 }} key={index}>
                  <CardContent>
                    <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
                      {item.name}
                    </Typography>
                    <Typography variant="h5" component="div">
                      {index}
                    </Typography>
                    <Typography sx={{ mb: 1.5 }} color="text.secondary">
                      adjective
                    </Typography>

                  </CardContent>
                  <CardActions>
                    <Link
                      href={{
                        pathname: '/details',
                        query: {
                          node_id: item.node_id,
                        } // the data
                      }}
                      passHref
                    >
                      <Button size="small">Edit</Button>
                    </Link>

                    <Button size="small" onClick={() => deleteItem(item)}>Delete</Button>

                  </CardActions>
                </Card>
              )
            })
          }
        </Grid>
      </main>
    </div>

  )
}
